"""from dotenv import load_dotenv
load_dotenv()
import streamlit as st
import os
import base64
import google.generativeai as genai
import PyPDF2

# Load API key
print("API Key:", os.getenv('GOOGLE_API_KEY')[:5] + "*****")
genai.configure(api_key=os.getenv('GOOGLE_API_KEY'))

# Cache PDF processing
@st.cache_data
def input_pdf_setup(upload_file):
    if upload_file is not None:
        pdf_reader = PyPDF2.PdfReader(upload_file)
        text = ""
        for page in pdf_reader.pages:
            text += page.extract_text() + "\n"
        return text
    else:
        raise FileNotFoundError("No file uploaded")

# Cache API responses
@st.cache_data
def get_Gemini_response(input, pdf_content, prompt):
    model = genai.GenerativeModel('gemini-1.5-flash')
    response = model.generate_content([input, pdf_content, prompt])
    return response.text

# Streamlit App
st.set_page_config(page_title="ATS Resume System")
st.header("ATS Resume System")
input_text = st.text_area("Job Description", "Enter the job description here:", key="input")
upload_file = st.file_uploader("Upload Resume", type=['pdf'])

if upload_file is not None:
    st.write("PDF Uploaded Successfully")

submit1 = st.button("Tell me About the resume")
submit3 = st.button("What are the keywords missing in resume")

input_Prompt1 = """
#You are an experienced HR with Technical Experience in the field of any one job role from Data Science or Full stack web development, Generative AI, Big Data Engineering, DevOps, and Data Analysis.
##Please share your professional evaluation on whether the candidate's profile aligns with the role. 
#Highlight the strengths and weaknesses of the applicant in relation to the specified job requirements.
"""

input_Prompt3 = """
#You are a skilled ATS (Applicant Tracking System) scanner with a deep understanding of any one job role: data science, Full stack web development, Generative AI, Big Data Engineering, DevOps, Data Analysis, and deep ATS functionality.
#Your task is to evaluate the resume against the provided job description. Give me the percentage of match if the resume matches the job description. First, the output should come as a percentage, then keywords missing, and finally, your final thoughts.
"""

if submit1:
    if upload_file is not None:
        with st.spinner("Processing PDF and generating response..."):
            pdf_content = input_pdf_setup(upload_file)
            response = get_Gemini_response(input_Prompt1, pdf_content, input_text)
            st.subheader("The response is")
            st.write(response)
    else:
        st.write("Please upload the resume")

elif submit3:
    if upload_file is not None:
        with st.spinner("Processing PDF and generating response..."):
            pdf_content = input_pdf_setup(upload_file)
            response = get_Gemini_response(input_Prompt3, pdf_content, input_text)
            st.subheader("The response is")
            st.write(response)
    else:
        st.write("Please upload the resume")"""